version: '3.8'

services:
  # Ambiente de Desenvolvimento Python
  app:
    build:
      context: .
      dockerfile: Dockerfile

    #Nome do container
    container_name: simulador

    # Mapeamento de Portas (App e PyCharm Debugger)
    ports:
      - "8000:5000" # Porta Padrão de Servidores Web Python
      - "5678:5678" # Porta Padrão do Debugger (PyCharm/debugpy)

    # Mapeamento de Volumes para Desenvolvimento
    volumes:
      - ./src:/usr/src/app
      - ./config:/usr/src/config

    # Variáveis de ambiente
    env_file:
      - ./config/.env

    # Habilita o modo interativo/TTY, útil ao entrar no container
    stdin_open: true
    tty: true

#    depends_on:
#      - db

    # COMANDO CHAVE: Mantém o container rodando em segundo plano
    command: flask run --host 0.0.0.0
    #command: tail -f /dev/null
# Comando de Inicialização com Debugpy (Template)
    # ATENÇÃO: Alterar este comando para o ponto de entrada real do projeto!
    # EXEMPLO DJANGO:
    #command: >
    #  sh -c "python -m debugpy --listen 0.0.0.0:5678
    #         /usr/src/app/manage.py runserver 0.0.0.0:8000"


# Serviço do Banco de Dados PostgreSQL (Inalterado)
#  db:
#    image: postgres:15-alpine
#    container_name: postgres
#    env_file:
#      - ./config/.env
#    ports:
#      - "5432:5432"
#    volumes:
#      - ./config/postgres/volume:/var/lib/postgresql/data
#    restart: always